# ref1: https://cloud.google.com/blog/ja/products/devops-sre/deploy-to-cloud-run-with-github-actions
# ref2: https://github.com/google-github-actions/example-workflows/blob/24274f78e13a0df73f176af798a36b54163d1e72/workflows/deploy-cloudrun/cloudrun-docker.yml

# Set secrets below in your GitHub repository settings:
#   - PROJECT_ID                # Google Cloud project id
#   - GAR_LOCATION              # Artifact Registry location
#   - REPOSITORY                # Artifact Registry repository name
#   - SERVICE                   # Cloud Run service name
#   - REGION                    # Cloud Run service region
#   - WIF_PROVIDER              # Workload Identity Federation provider (e.g. - projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider)
#   - WIF_SERVICE_ACCOUNT       # Workload Identity Federation service account (e.g. - my-service-account@my-project.iam.gserviceaccount.com)

name: Build and Deploy API
on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
        description: Name of the target environment.
      ref:
        type: string
        required: true
        description: The tag or SHA to checkout.
    secrets:
      WIF_PROVIDER:
        required: true
      WIF_SERVICE_ACCOUNT:
        required: true

jobs:
  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    # See: apps/api/scripts/google-cloud/setup-workload-identity.sh
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}'
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}'

      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v1'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ secrets.GAR_LOCATION }}-docker.pkg.dev'

      - name: Build and Push Container
        run: |-
          docker build -f apps/api/Dockerfile -t "${{ secrets.GAR_LOCATION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.REPOSITORY }}/${{ secrets.SERVICE }}:${{ inputs.ref }}" ./
          docker push "${{ secrets.GAR_LOCATION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.REPOSITORY }}/${{ secrets.SERVICE }}:${{ inputs.ref }}"

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ secrets.SERVICE }}
          region: ${{ secrets.REGION }}
          image: ${{ secrets.GAR_LOCATION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.REPOSITORY }}/${{ secrets.SERVICE }}:${{ inputs.ref }}
          env_vars: |
            NODE_ENV=${{ inputs.environment }}

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
